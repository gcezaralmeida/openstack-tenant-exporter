replicaCount: 1

image:
  repository: brocolis/openstack-tenant-exporter
  pullPolicy: IfNotPresent
  tag: "0.1.5"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 9183

serviceMonitor:
  enabled: true
  interval: 1m
  scrapeTimeout: 30s

grafana:
  dashboards:
    enabled: true

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

secret:
  create: false
  cloudConfig: |
    clouds.yaml: |
        clouds:
          default:
            region_name: regionOne
            auth:
              username: username
              password: password
              project_id: project_id
              project_domain_name: 'default'
              user_domain_name: 'default'
              auth_url: 'https://<mycloud>:5000/v3'
            verify: false
env:
- name: OS_CLOUD
  value: "default"
- name: OS_CLIENT_CONFIG_FILE
  value: "/etc/config/clouds.yaml"

# Additional volumes on the output Deployment definition.
volumes:
- hostPath:
    path: /etc/ssl/certs
    type: DirectoryOrCreate
  name: ca-certs
- name: cloud-config-volume
  secret:
    secretName: cloud-config

# Additional volumeMounts on the output Deployment definition.
volumeMounts: 
- mountPath: /etc/ssl/certs
  name: ca-certs
  readOnly: true
- mountPath: /etc/config
  name: cloud-config-volume
  readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}